package heladeria;

//paquetes necesarios
import conecciondb.Conectar;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

//Se realiza la conexion con SQL para listar, borrar y dem√°s

public class FormularioReceta extends javax.swing.JInternalFrame {

    Connection coneccionsql;
    Statement sentenciasql;
    DefaultTableModel modelo_tabla;
    //modelo para el combo
    DefaultComboBoxModel modelo_combo;
    private Conectar mysql = new Conectar();
    private Connection cn = mysql.getConnection();
    private String sSQL = "";
    
    //coneccion con sql
    public FormularioReceta() {
        initComponents();
        coneccionsql = Conectar.getConnection();
        LlenarTabla();
        mostrar("");
    }
    //Agarrar los datos de tipo pedido y listar
    public ArrayList<String> llenar_combo() {
        ArrayList<String> lista = new ArrayList<String>();
        sSQL = "SELECT tipo FROM tipo_pedido ORDER BY id";
        
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);

            while (rs.next()) {
                lista.add(rs.getString("tipo"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return lista;
    }
    
    public void mostrar(String buscar) {
        comboTipoReceta.removeAllItems();
        ArrayList<String> lista = new ArrayList<String>();
        lista = llenar_combo();
        for (int i = 0; i < lista.size(); i++) {
            comboTipoReceta.addItem(lista.get(i));
        }
    }
    
    void LlenarTabla() {
        try {
            //encabezados de la tabla
            String[] titulos = {"Id", "Heladero", "Nombre Helado", "Ingrediente", "Descripcion", "Caloria", "Fecha Vencimiento"};
            String stsql = "select * from pedido order by id";
            modelo_tabla = new DefaultTableModel(null, titulos);
            sentenciasql = coneccionsql.createStatement();
            ResultSet rs = sentenciasql.executeQuery(stsql);

            //arreglo fila, para almacenar registros
            String[] fila = new String[7];
            //while para insertar registros en la tabla
            while (rs.next()) {
                fila[0] = rs.getString("id");
                fila[1] = rs.getString("tipo_pedido");
                fila[2] = rs.getString("nombre_plato");
                fila[3] = rs.getString("nombre_cliente");
                fila[4] = rs.getString("numero");
                fila[5] = rs.getString("ci");
                fila[6] = rs.getString("obs");
            

                modelo_tabla.addRow(fila);
            }

            //agrego el default model
            tabla_receta.setModel(modelo_tabla);

            //definir el ancho de las columnas
            int[] anchos = {30, 200, 150, 150, 150, 150, 150};
            for (int i = 0; i < tabla_receta.getColumnCount(); i++) {
                tabla_receta.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            //escondemos la columna id en la tabla (finalidad estetica)
            //tabla_mascotas.getColumnModel().getColumn(0).setMinWidth(0);
            //tabla_mascotas.getColumnModel().getColumn(0).setMaxWidth(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_receta = new javax.swing.JTable();
        txtingrediente = new javax.swing.JTextField();
        comboTipoReceta = new javax.swing.JComboBox<>();
        id_receta = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombreReceta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        intporciones = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        boton_editar = new javax.swing.JButton();
        boton_borrar = new javax.swing.JButton();
        cargarTipoReceta = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtcedula = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtobs = new javax.swing.JTextField();

        tabla_receta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla_receta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_recetaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_receta);

        txtingrediente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtingredienteKeyTyped(evt);
            }
        });

        comboTipoReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoRecetaActionPerformed(evt);
            }
        });

        id_receta.setEditable(false);
        id_receta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_recetaActionPerformed(evt);
            }
        });

        jLabel6.setText("ID:");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registro");

        jLabel2.setText("Heladero:");

        jLabel3.setText("Nombre Helado:");

        jLabel4.setText("Descripcion:");

        jLabel5.setText("Calorias:");

        intporciones.setMaximumSize(new java.awt.Dimension(20, 20));
        intporciones.setMinimumSize(new java.awt.Dimension(1, 1));

        jButton1.setText("GUARDAR");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        boton_editar.setText("EDITAR");
        boton_editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_editarMouseClicked(evt);
            }
        });
        boton_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_editarActionPerformed(evt);
            }
        });

        boton_borrar.setText("BORRAR");
        boton_borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_borrarMouseClicked(evt);
            }
        });

        cargarTipoReceta.setText("+");
        cargarTipoReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargarTipoRecetaMouseClicked(evt);
            }
        });

        jButton2.setText("IMPRIMIR");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Ingredientes:");

        txtcedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcedulaKeyTyped(evt);
            }
        });

        jLabel8.setText("Fecha Vencimiento:");

        txtobs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtobsKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(465, 465, 465))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(id_receta, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboTipoReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cargarTipoReceta))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_editar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton_borrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(intporciones, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtingrediente, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombreReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtobs, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(id_receta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboTipoReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cargarTipoReceta))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtingrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(intporciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtobs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(boton_editar)
                            .addComponent(boton_borrar)
                            .addComponent(jButton2))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabla_recetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_recetaMouseClicked
        if (evt.getButton() == 1) {
            int fila = tabla_receta.getSelectedRow();
            try {
                String stsql = "select * from pedido where id = " + tabla_receta.getValueAt(fila, 0);
                sentenciasql = coneccionsql.createStatement();
                ResultSet rs = sentenciasql.executeQuery(stsql);
                rs.next();

                txtingrediente.setText(rs.getString("nombre_plato"));
                txtNombreReceta.setText(rs.getString("nombre_cliente"));
                intporciones.setValue(rs.getInt("numero"));
                comboTipoReceta.setSelectedItem(rs.getString("tipo_pedido"));
                txtcedula.setText(rs.getString("ci"));
                txtobs.setText(rs.getString("obs"));
                id_receta.setText(Integer.toString(rs.getInt("id")));
               

                //combo_pais.setSelectedItem(rs_pais.getString("nombre_receta"));
                //combo_departamento.setSelectedItem(rs_departamento.getString("nombre_receta"));
                //combo_ciudad.setSelectedItem(rs_ciudad.getString("nombre_receta"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_tabla_recetaMouseClicked

    private void id_recetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_recetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_recetaActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            String tipo_pedido = comboTipoReceta.getSelectedItem().toString();
            String nombre_plato = txtingrediente.getText();
            String nombre_cliente = txtNombreReceta.getText();
            int numero = Integer.parseInt(intporciones.getValue().toString());
            String ci = txtcedula.getText();
            String obs = txtobs.getText();
            

            //limpiar formulario
            txtingrediente.setText("");
            txtNombreReceta.setText("");
            intporciones.setValue(Integer.valueOf(0));
            comboTipoReceta.setSelectedItem("Indefinido");
            txtcedula.setText("");
            txtobs.setText("");
            

            System.out.println("HELADERO:" + tipo_pedido);
            System.out.println("NOMBRE HELADO:" + nombre_plato);
            System.out.println("INGREDIENTE:" + nombre_cliente);
            System.out.println("CALORIAS:" + numero);
            System.out.println("PROCESO:" + ci);
            System.out.println("FECHA VENCIMIENTO" + obs);
            

            //Guardar en la base de datos
            String stguardar = "insert into pedido (tipo_pedido, nombre_plato, nombre_cliente, numero, ci, obs) values (?,?,?,?,?,?)";
            PreparedStatement ps = coneccionsql.prepareStatement(stguardar);
            ps.setString(1, tipo_pedido);
            ps.setString(2, nombre_plato);
            ps.setString(3, nombre_cliente);
            ps.setInt(4, numero);
            ps.setString(5, ci);
            ps.setString(6, obs);
           
            int n = ps.executeUpdate();
            if (n > 0) {
                JOptionPane.showMessageDialog(this, "Se guard√≥ correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar");
            }
            ps.close();

            LlenarTabla();

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void boton_editarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_editarMouseClicked
        try {
            String tipo_pedido = comboTipoReceta.getSelectedItem().toString();
            String nombre_plato = txtingrediente.getText();
            String nombre_cliente = txtNombreReceta.getText();
            int numero = Integer.parseInt(intporciones.getValue().toString());
            String ci = txtcedula.getText();
            String obs = txtobs.getText();
            int id = Integer.parseInt(id_receta.getText());
            

            //limpiar formulario
            txtingrediente.setText("");
            txtNombreReceta.setText("");
            intporciones.setValue(Integer.valueOf(0));
            comboTipoReceta.setSelectedItem("Indefinido");
            txtcedula.setText("");
            txtobs.setText("");
            

            //Guardar en la base de datos
            String stactualizar = "update pedido set tipo_pedido=?, nombre_plato=?, nombre_cliente=?, numero=?, ci=?, obs=? where id=?";
            PreparedStatement ps = coneccionsql.prepareStatement(stactualizar);
            ps.setString(1, tipo_pedido);
            ps.setString(2, nombre_plato);
            ps.setString(3, nombre_cliente);
            ps.setInt(4, numero);
            ps.setString(5, ci);
            ps.setString(6, obs);
            ps.setInt(7, id);
            int n = ps.executeUpdate();
            if (n > 0) {
                LlenarTabla();
                JOptionPane.showMessageDialog(this, "Se actualizo correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar");
            }
            ps.close();

            LlenarTabla();

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_boton_editarMouseClicked

    private void boton_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_editarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton_editarActionPerformed

    private void boton_borrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_borrarMouseClicked
        try {
            String id = id_receta.getText();

            //limpiar formulario
            txtingrediente.setText("");
            txtNombreReceta.setText("");
            intporciones.setValue(Integer.valueOf(0));
            comboTipoReceta.setSelectedItem("Indefinido");
            txtcedula.setText("");
            txtobs.setText("");
            

            //Guardar en la base de datos
            String stborrar = "delete from pedido where id =" + id;
            PreparedStatement ps = coneccionsql.prepareStatement(stborrar);
            int n = ps.executeUpdate();
            if (n > 0) {
                JOptionPane.showMessageDialog(this, "Se borro correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al borrar");
            }
            ps.close();

            LlenarTabla();

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_boton_borrarMouseClicked

    private void comboTipoRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoRecetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTipoRecetaActionPerformed

    private void cargarTipoRecetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarTipoRecetaMouseClicked
        FormularioTipoReceta formulariotiporeceta = new FormularioTipoReceta();
        formulariotiporeceta.setIconifiable(Boolean.TRUE);
        formulariotiporeceta.setClosable(Boolean.TRUE);
        Principal.Escritorio.add(formulariotiporeceta);
        formulariotiporeceta.show();
        
        
        
        
    }//GEN-LAST:event_cargarTipoRecetaMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        Impresora impresora = new Impresora();
        String momento = impresora.getMomento();
        impresora.imprimirJtable(tabla_receta, "Listado de Pedidos", momento, true);
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void txtingredienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtingredienteKeyTyped
        char c = evt.getKeyChar();
        if ( (!Character.isAlphabetic(c)) && (c != ' ')){
            evt.consume();
        }
    }//GEN-LAST:event_txtingredienteKeyTyped

    private void txtcedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcedulaKeyTyped

    private void txtobsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtobsKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtobsKeyTyped
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_borrar;
    private javax.swing.JButton boton_editar;
    private javax.swing.JButton cargarTipoReceta;
    public static javax.swing.JComboBox<String> comboTipoReceta;
    private javax.swing.JTextField id_receta;
    private javax.swing.JSpinner intporciones;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_receta;
    private javax.swing.JTextField txtNombreReceta;
    private javax.swing.JTextField txtcedula;
    private javax.swing.JTextField txtingrediente;
    private javax.swing.JTextField txtobs;
    // End of variables declaration//GEN-END:variables
}
