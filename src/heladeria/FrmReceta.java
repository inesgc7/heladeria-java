/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package heladeria;

import javax.swing.JOptionPane;
import conecciondb.Conectar;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;




public class FrmReceta extends javax.swing.JFrame {

    //----------------------------------------------------------//
    Connection coneccionsql;
    Statement sentenciasql;
    DefaultTableModel modelo_tabla;
    //modelo para el combo
    DefaultComboBoxModel modelo_combo;
    //----------------------------------------------------------//

    /**
     * Creates new form FrmReceta
     */
    public FrmReceta() {
        initComponents();
        coneccionsql = Conectar.getConnection();
        LlenarTabla();
        mostrar("");
    }
    
    private Conectar mysql = new Conectar();
    private Connection cn = mysql.getConnection();
    private String sSQL = "";
    
    public ArrayList<String> llenar_combo() {
        ArrayList<String> lista = new ArrayList<String>();
        sSQL = "SELECT tipo FROM tipo_pedido ORDER BY id";
        
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sSQL);

            while (rs.next()) {
                lista.add(rs.getString("tipo"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return lista;
    }
    
    public void mostrar(String buscar) {
        comboTipoReceta.removeAllItems();
        ArrayList<String> lista = new ArrayList<String>();
        lista = llenar_combo();
        for (int i = 0; i < lista.size(); i++) {
            comboTipoReceta.addItem(lista.get(i));
        }
    }
    
    void LlenarTabla() {
        try {
            //encabezados de la tabla
            String[] titulos = {"Id", "Delivery", "Nombre Plato", "Nombre Cliente", "Numero", "CI", "Obs"};
            String stsql = "select * from pedido order by id";
            modelo_tabla = new DefaultTableModel(null, titulos);
            sentenciasql = coneccionsql.createStatement();
            ResultSet rs = sentenciasql.executeQuery(stsql);

            //arreglo fila, para almacenar registros
            String[] fila = new String[7];
            //while para insertar registros en la tabla
            while (rs.next()) {
                fila[0] = rs.getString("id");
                fila[1] = rs.getString("tipo_pedido");
                fila[2] = rs.getString("nombre_plato");
                fila[3] = rs.getString("nombre_cliente");
                fila[4] = rs.getString("numero");
                fila[5] = rs.getString("ci");
                fila[6] = rs.getString("obs");

                modelo_tabla.addRow(fila);
            }

            //agrego el default model
            tabla_receta.setModel(modelo_tabla);

            //definir el ancho de las columnas
            int[] anchos = {30, 200, 150, 150, 150};
            for (int i = 0; i < tabla_receta.getColumnCount(); i++) {
                tabla_receta.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            //escondemos la columna id en la tabla (finalidad estetica)
            //tabla_mascotas.getColumnModel().getColumn(0).setMinWidth(0);
            //tabla_mascotas.getColumnModel().getColumn(0).setMaxWidth(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        intporciones = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboTipoReceta = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_receta = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        id_receta = new javax.swing.JTextField();
        boton_editar = new javax.swing.JButton();
        boton_borrar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtingrediente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtcedula = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombreReceta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        intporciones1 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        txtobs = new javax.swing.JTextField();

        intporciones.setMaximumSize(new java.awt.Dimension(20, 20));
        intporciones.setMinimumSize(new java.awt.Dimension(1, 1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PEDIDO");

        jLabel2.setText("Delivery:");

        jButton1.setText("GUARDAR");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tabla_receta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla_receta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_recetaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_receta);

        jLabel6.setText("ID:");

        id_receta.setEditable(false);
        id_receta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_recetaActionPerformed(evt);
            }
        });

        boton_editar.setText("EDITAR");
        boton_editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_editarMouseClicked(evt);
            }
        });
        boton_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_editarActionPerformed(evt);
            }
        });

        boton_borrar.setText("BORRAR");
        boton_borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_borrarMouseClicked(evt);
            }
        });

        jLabel3.setText("Nombre Plato:");

        txtingrediente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtingredienteKeyTyped(evt);
            }
        });

        jLabel7.setText("Cedula Cliente:");

        txtcedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcedulaActionPerformed(evt);
            }
        });
        txtcedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcedulaKeyTyped(evt);
            }
        });

        jLabel4.setText("Nombre Cliente:");

        jLabel5.setText("Numero de Mesa:");

        intporciones1.setMaximumSize(new java.awt.Dimension(20, 20));
        intporciones1.setMinimumSize(new java.awt.Dimension(1, 1));

        jLabel8.setText("Obs:");

        txtobs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtobsKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(465, 465, 465))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombreReceta))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtcedula))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(23, 23, 23)
                                .addComponent(txtingrediente))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel6))
                                        .addGap(45, 45, 45)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(comboTipoReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(id_receta, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(boton_editar)
                                        .addGap(18, 18, 18)
                                        .addComponent(boton_borrar)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(58, 58, 58))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(intporciones1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtobs, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(159, 159, 159))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id_receta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboTipoReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtingrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombreReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(intporciones1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtobs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(boton_editar)
                            .addComponent(boton_borrar))
                        .addGap(43, 43, 43))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            String tipo_pedido = comboTipoReceta.getSelectedItem().toString();
            String nombre_plato= txtingrediente.getText();
            String nombre_cliente = txtNombreReceta.getText();
            int numero = Integer.parseInt(intporciones.getValue().toString());
            String ci = txtcedula.getText();
            String obs = txtobs.getText();

            //limpiar formulario
            txtingrediente.setText("");
            txtNombreReceta.setText("");
            intporciones.setValue(Integer.valueOf(0));
            comboTipoReceta.setSelectedItem("Indefinido");
            txtcedula.setText("");
            txtobs.setText("");

            System.out.println("DELIVERY:" + tipo_pedido);
            System.out.println("NOMBRE PLATO:" + nombre_plato);
            System.out.println("NOMBRE CLIENTE:" + nombre_cliente);
            System.out.println("NUMERO:" + numero);
            System.out.println("CI:" + ci);
            System.out.println("OBS:" + obs);

            //Guardar en la base de datos
            String stguardar = "insert into receta (tipo_pedido, nombre_plato, nombre_cliente, numero, ci, obs) values (?,?,?,?,?,?)";
            PreparedStatement ps = coneccionsql.prepareStatement(stguardar);
            ps.setString(1, tipo_pedido);
            ps.setString(2, nombre_plato);
            ps.setString(3, nombre_cliente);
            ps.setInt(4, numero);
            ps.setString(5, ci);
            ps.setString(6, obs);
            int n = ps.executeUpdate();
            if (n > 0) {
                JOptionPane.showMessageDialog(this, "Se guardó correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al guardar");
            }
            ps.close();

            LlenarTabla();

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabla_recetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_recetaMouseClicked
        if (evt.getButton() == 1) {
            int fila = tabla_receta.getSelectedRow();
            try {
                String stsql = "select * from pedido where id = " + tabla_receta.getValueAt(fila, 0);
                sentenciasql = coneccionsql.createStatement();
                ResultSet rs = sentenciasql.executeQuery(stsql);
                rs.next();

                txtingrediente.setText(rs.getString("nombre_plato"));
                txtNombreReceta.setText(rs.getString("nombre_cliente"));
                intporciones.setValue(rs.getInt("numero"));
                comboTipoReceta.setSelectedItem(rs.getString("tipo_pedido"));
                id_receta.setText(Integer.toString(rs.getInt("id")));
                txtcedula.setText(rs.getString("ci"));
                txtobs.setText(rs.getString("obs"));

                //combo_pais.setSelectedItem(rs_pais.getString("nombre"));
                //combo_departamento.setSelectedItem(rs_departamento.getString("nombre"));
                //combo_ciudad.setSelectedItem(rs_ciudad.getString("nombre"));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_tabla_recetaMouseClicked

    private void id_recetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_recetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_recetaActionPerformed

    private void boton_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_editarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton_editarActionPerformed

    private void boton_editarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_editarMouseClicked
        try {
            String tipo_pedido = comboTipoReceta.getSelectedItem().toString();
            String nombre_plato = txtingrediente.getText();
            String nombre_cliente = txtNombreReceta.getText();
            int numero = Integer.parseInt(intporciones.getValue().toString());
            int id = Integer.parseInt(id_receta.getText());
            String ci = txtcedula.getText();
            String obs = txtobs.getText();

            //limpiar formulario
            txtingrediente.setText("");
            txtNombreReceta.setText("");
            intporciones.setValue(Integer.valueOf(0));
            comboTipoReceta.setSelectedItem("Indefinido");
            txtcedula.setText("");
            txtobs.setText("");

            //Guardar en la base de datos
            String stactualizar = "update receta set tipo_pedido=?, nombre_plato=?, nombre_cliente=?, numero=?, ci=?, obs=? where id=?";
            PreparedStatement ps = coneccionsql.prepareStatement(stactualizar);
            ps.setString(1, tipo_pedido);
            ps.setString(2, nombre_plato);
            ps.setString(3, nombre_cliente);
            ps.setInt(4, numero);
            ps.setString(5, ci);
            ps.setString(6, obs);
            ps.setInt(7, id);
            int n = ps.executeUpdate();
            if (n > 0) {
                LlenarTabla();
                JOptionPane.showMessageDialog(this, "Se actualizo correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar");
            }
            ps.close();

            LlenarTabla();

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_boton_editarMouseClicked

    private void boton_borrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_borrarMouseClicked
        try {
            String id = id_receta.getText();

            //limpiar formulario
            txtingrediente.setText("");
            txtNombreReceta.setText("");
            intporciones.setValue(Integer.valueOf(0));
            comboTipoReceta.setSelectedItem("Indefinido");
            txtcedula.setText("");
            txtobs.setText("");

            //Guardar en la base de datos
            String stborrar = "delete from pedido where id =" + id;
            PreparedStatement ps = coneccionsql.prepareStatement(stborrar);
            int n = ps.executeUpdate();
            if (n > 0) {
                JOptionPane.showMessageDialog(this, "Se borro correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al borrar");
            }
            ps.close();

            LlenarTabla();

        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_boton_borrarMouseClicked

    private void txtingredienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtingredienteKeyTyped
        char c = evt.getKeyChar();
        if ( (!Character.isAlphabetic(c)) && (c != ' ')){
            evt.consume();
        }
    }//GEN-LAST:event_txtingredienteKeyTyped

    private void txtcedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcedulaKeyTyped

    private void txtcedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcedulaActionPerformed

    private void txtobsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtobsKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtobsKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmReceta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_borrar;
    private javax.swing.JButton boton_editar;
    private javax.swing.JComboBox<String> comboTipoReceta;
    private javax.swing.JTextField id_receta;
    private javax.swing.JSpinner intporciones;
    private javax.swing.JSpinner intporciones1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_receta;
    private javax.swing.JTextField txtNombreReceta;
    private javax.swing.JTextField txtcedula;
    private javax.swing.JTextField txtingrediente;
    private javax.swing.JTextField txtobs;
    // End of variables declaration//GEN-END:variables
}
